/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pl.polsl.anna.pogorzelska.view;

import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;
import pl.polsl.anna.pogorzelska.controller.Controller;
import pl.polsl.anna.pogorzelska.model.exceptions.NonEnglishInputException;
import pl.polsl.anna.pogorzelska.model.exceptions.NotNumberInputException;

/** 
 * Class responsible for communicating with the user.
 * 
 * @author Anna Pogorzelska
 * @version 1.0
 */

public class GraphicalUserInterface extends javax.swing.JFrame {

    private final Controller controller;
    /**
     * Creates new form graphicalUserInterface
     */
    public GraphicalUserInterface(Controller controller) {
        initComponents();
        this.controller = controller;
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        inputField = new javax.swing.JTextField();
        outputField = new javax.swing.JTextField();
        encryptionButton = new javax.swing.JButton();
        decryptionButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setResizeWeight(0.8);

        inputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldActionPerformed(evt);
            }
        });

        outputField.setText("output");

        encryptionButton.setText("encryption");
        encryptionButton.setActionCommand("encryptionButtonListener");

        decryptionButton.setText("decryption");
        decryptionButton.setActionCommand("decryptionButtonListener");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(outputField, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(encryptionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(decryptionButton))
                    .addComponent(inputField, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
                .addGap(0, 96, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decryptionButton)
                    .addComponent(encryptionButton))
                .addGap(39, 39, 39)
                .addComponent(outputField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        inputField.getAccessibleContext().setAccessibleName("inputText");
        inputField.getAccessibleContext().setAccessibleDescription("");
        outputField.getAccessibleContext().setAccessibleName("outputText");
        encryptionButton.getAccessibleContext().setAccessibleName("");
        decryptionButton.getAccessibleContext().setAccessibleName("");

        jSplitPane2.setTopComponent(jPanel2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jSplitPane2.setRightComponent(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actionPerformed(ActionEvent e) {
        if ("encryptionButtonListener".equals(e.getActionCommand())) {
            try {
                this.encryptionButtonListener();
            } catch (NonEnglishInputException ex) {
                System.err.print("something went wrong");
            }
        }
        else if ("decryptionButtonListener".equals(e.getActionCommand()))
        {
        }
    }
        private void encryptionButtonListener() throws NonEnglishInputException {
            String input = inputField.getText();
            String output = this.controller.encryptionStarted(input);
            this.outputTextChanged(output);
        }
        
        private void decryptionButtonListener() throws NotNumberInputException {
            String input = inputField.getText();
            String output = this.controller.decryptionStarted(input);
            this.outputTextChanged(output);
        }
        
        private void outputTextChanged(String outputProvided) {
            outputField.setText(outputProvided);
        }
    
    private void inputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showGui() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new GraphicalUserInterface().setVisible(true);
            }
        });
   /**
    * Function responsible for getting user input provided.
    */     
    
    }
    
    private void getUserInput() {
        
    }
    /**
    * Function responsible for getting mode chosen by the user.
    */   
//    public void getSelectedMode(ItemEvent e) {
//       Object source = e.getItemSelectable();
//        if (source == encryptionButton) {
//            System.out.print("encryption mode");
//        } else if (source == decryptionButton) {
//            System.out.print("encryption mode");
//        }
//    }
   /**
    * Function responsible for starting transcription.
    */       
    private void startTranscription() {
        
    }
   /**
    * Function responsible for showing the user the result of transcription.
    */       
    private void showTranscriptedMessage() {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decryptionButton;
    private javax.swing.JButton encryptionButton;
    private javax.swing.JTextField inputField;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField outputField;
    // End of variables declaration//GEN-END:variables
}
