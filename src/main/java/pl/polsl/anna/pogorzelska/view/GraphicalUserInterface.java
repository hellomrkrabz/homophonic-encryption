/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pl.polsl.anna.pogorzelska.view;

import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import pl.polsl.anna.pogorzelska.controller.Controller;
import pl.polsl.anna.pogorzelska.model.exceptions.NonEnglishInputException;
import pl.polsl.anna.pogorzelska.model.exceptions.NotNumberInputException;

/** 
 * Class responsible for communicating with the user.
 * 
 * @author Anna Pogorzelska
 * @version 1.0
 */

public class GraphicalUserInterface extends javax.swing.JFrame {

    private final Controller controller;
    /**
     * Creates new form graphicalUserInterface
     */
    public GraphicalUserInterface(Controller controller) {
        initComponents();
        this.controller = controller;
        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Input", "Output"
            }
        ));
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        inputField = new javax.swing.JTextField();
        outputField = new javax.swing.JTextField();
        encryptionButton = new javax.swing.JButton();
        decryptionButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        menu = new javax.swing.JMenuBar();
        menuManualTab = new javax.swing.JMenu();
        encryptionMenuItem = new javax.swing.JMenuItem();
        decryptionMenuItem = new javax.swing.JMenuItem();
        menuFileTab = new javax.swing.JMenu();
        closeMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        splitPane.setResizeWeight(0.8);

        inputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldActionPerformed(evt);
            }
        });

        outputField.setEditable(false);
        outputField.setText("output");

        encryptionButton.setText("encryption");
        encryptionButton.setActionCommand("encryptionButtonListener");
        encryptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptionButtonActionPerformed(evt);
            }
        });

        decryptionButton.setText("decryption");
        decryptionButton.setActionCommand("decryptionButtonListener");
        decryptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(outputField, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(encryptionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(decryptionButton))
                    .addComponent(inputField, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
                .addGap(0, 96, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decryptionButton)
                    .addComponent(encryptionButton))
                .addGap(39, 39, 39)
                .addComponent(outputField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        inputField.getAccessibleContext().setAccessibleName("inputText");
        inputField.getAccessibleContext().setAccessibleDescription("");
        outputField.getAccessibleContext().setAccessibleName("outputText");
        encryptionButton.getAccessibleContext().setAccessibleName("");
        decryptionButton.getAccessibleContext().setAccessibleName("");

        splitPane.setTopComponent(jPanel2);

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(historyTable);
        if (historyTable.getColumnModel().getColumnCount() > 0) {
            historyTable.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            historyTable.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            historyTable.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            historyTable.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        splitPane.setRightComponent(jScrollPane2);

        menuManualTab.setText("Manual");

        encryptionMenuItem.setText("Encryption");
        encryptionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptionMenuItemActionPerformed(evt);
            }
        });
        menuManualTab.add(encryptionMenuItem);

        decryptionMenuItem.setText("Decryption");
        decryptionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptionMenuItemActionPerformed(evt);
            }
        });
        menuManualTab.add(decryptionMenuItem);

        menu.add(menuManualTab);

        menuFileTab.setText("File");

        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        menuFileTab.add(closeMenuItem);

        menu.add(menuFileTab);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(splitPane, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(splitPane, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
       

    private void outputTextChanged(String outputProvided) {
        outputField.setText(outputProvided);
    }
    
    private void inputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFieldActionPerformed

    private void encryptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptionButtonActionPerformed
        String input = inputField.getText();
        try {
            String output = this.controller.encryptionStarted(input);
            this.outputTextChanged(output);
        } catch (NonEnglishInputException ex) {
            showPopUpMessage("Please correct input for encryption");
        }
    }//GEN-LAST:event_encryptionButtonActionPerformed

    private void decryptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptionButtonActionPerformed
        String input = inputField.getText();
        try {
            String output = this.controller.decryptionStarted(input);
            this.outputTextChanged(output);
        } catch (NotNumberInputException ex) {
            showPopUpMessage("Please correct input for decryption");
        }
    }//GEN-LAST:event_decryptionButtonActionPerformed

    private void encryptionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptionMenuItemActionPerformed
        this.showPopUpMessage("Correct input for encryption consists from letters in latin alphabet range and whitespaces.");
    }//GEN-LAST:event_encryptionMenuItemActionPerformed

    private void decryptionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptionMenuItemActionPerformed
        this.showPopUpMessage("Correct input for decryption consists from numbers and whitespaces.");
    }//GEN-LAST:event_decryptionMenuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeMenuItemActionPerformed


    public void showPopUpMessage(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JButton decryptionButton;
    private javax.swing.JMenuItem decryptionMenuItem;
    private javax.swing.JButton encryptionButton;
    private javax.swing.JMenuItem encryptionMenuItem;
    private javax.swing.JTable historyTable;
    private javax.swing.JTextField inputField;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuFileTab;
    private javax.swing.JMenu menuManualTab;
    private javax.swing.JTextField outputField;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
